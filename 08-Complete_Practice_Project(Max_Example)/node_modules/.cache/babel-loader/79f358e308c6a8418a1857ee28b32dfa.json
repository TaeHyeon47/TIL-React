{"ast":null,"code":"var _jsxFileName = \"/Users/jotaehyeon/Desktop/TIL-React/08-Complete_Practice_Project(Max_Example)/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card'; // 자바스크립트 파일은 '.js'를 붙이지 않아도 된다.\n\nimport Button from '../UI/Button';\nimport classes from './AddUser.module.css';\nimport ErrorModal from './components/UI/ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  // 처음 input에 값이 없기 때문에 State의 초기값은 ''으로 입력된다.\n  const [enteredUsername, setEnteredUsername] = useState('');\n  const [enteredAge, setEnteredAge] = useState('');\n\n  const addUserHandler = event => {\n    event.preventDefault(); // Trim will remove any excess white space.\n\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      return; // 리턴되면서 addUserHandler의 코드는 실행되지 않는다. (return statements finished the function execution.)\n    } // enteredAge가 String이지만, JS에서 일반적으로 숫자로 비교가 가능하다. 하지만, 형변환을 하는 것이 더 안전하기 때문에 +를 붙이는 것이 좋다.\n\n\n    if (+enteredAge < 1) {\n      return;\n    }\n\n    console.log(enteredUsername, enteredAge);\n    props.onAddUser(enteredUsername, enteredAge);\n    setEnteredUsername('');\n    setEnteredAge('');\n  };\n\n  const usernameChangeHandler = event => {\n    setEnteredUsername(event.target.value);\n  };\n\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: \"An error occured!\",\n      message: \"Something went wrong!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: enteredUsername,\n          onChange: usernameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          value: enteredAge,\n          onChange: ageChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"KlB6dcQFtu+2S16p6cjD6Kz8DMs=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","Card","Button","classes","ErrorModal","AddUser","props","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","addUserHandler","event","preventDefault","trim","length","console","log","onAddUser","usernameChangeHandler","target","value","ageChangeHandler","input"],"sources":["/Users/jotaehyeon/Desktop/TIL-React/08-Complete_Practice_Project(Max_Example)/src/components/Users/AddUser.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from '../UI/Card'; // 자바스크립트 파일은 '.js'를 붙이지 않아도 된다.\nimport Button from '../UI/Button';\nimport classes from './AddUser.module.css';\nimport ErrorModal from './components/UI/ErrorModal';\n\nconst AddUser = (props) => {\n  // 처음 input에 값이 없기 때문에 State의 초기값은 ''으로 입력된다.\n  const [enteredUsername, setEnteredUsername] = useState('');\n  const [enteredAge, setEnteredAge] = useState('');\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    // Trim will remove any excess white space.\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      return; // 리턴되면서 addUserHandler의 코드는 실행되지 않는다. (return statements finished the function execution.)\n    }\n    // enteredAge가 String이지만, JS에서 일반적으로 숫자로 비교가 가능하다. 하지만, 형변환을 하는 것이 더 안전하기 때문에 +를 붙이는 것이 좋다.\n    if (+enteredAge < 1) {\n      return;\n    }\n\n    console.log(enteredUsername, enteredAge);\n    props.onAddUser(enteredUsername, enteredAge);\n\n    setEnteredUsername('');\n    setEnteredAge('');\n  };\n\n  const usernameChangeHandler = (event) => {\n    setEnteredUsername(event.target.value);\n  };\n\n  const ageChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n  };\n\n  return (\n    <div>\n      <ErrorModal title='An error occured!' message='Something went wrong!' />\n      <Card className={classes.input}>\n        <form onSubmit={addUserHandler}>\n          {/* \n         'htmlfor' : the prop name for assigning that for attribute to a label.\n          that they understand which label belongs to which input.\n          htmlfor과 id를 username으로 연결 \n      */}\n          <label htmlFor='username'>Username</label>\n          <input\n            id='username'\n            type='text'\n            value={enteredUsername}\n            onChange={usernameChangeHandler}\n          />\n          <label htmlFor='age'>Age (Years)</label>\n          <input\n            id='age'\n            type='number'\n            value={enteredAge}\n            onChange={ageChangeHandler}\n          />\n          <Button type='submit'>Add User</Button>\n        </form>\n      </Card>\n    </div>\n  );\n};\n\nexport default AddUser;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CAA+B;;AAC/B,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACzB;EACA,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;;EAEA,MAAMW,cAAc,GAAIC,KAAD,IAAW;IAChCA,KAAK,CAACC,cAAN,GADgC,CAEhC;;IACA,IAAIN,eAAe,CAACO,IAAhB,GAAuBC,MAAvB,KAAkC,CAAlC,IAAuCN,UAAU,CAACK,IAAX,GAAkBC,MAAlB,KAA6B,CAAxE,EAA2E;MACzE,OADyE,CACjE;IACT,CAL+B,CAMhC;;;IACA,IAAI,CAACN,UAAD,GAAc,CAAlB,EAAqB;MACnB;IACD;;IAEDO,OAAO,CAACC,GAAR,CAAYV,eAAZ,EAA6BE,UAA7B;IACAH,KAAK,CAACY,SAAN,CAAgBX,eAAhB,EAAiCE,UAAjC;IAEAD,kBAAkB,CAAC,EAAD,CAAlB;IACAE,aAAa,CAAC,EAAD,CAAb;EACD,CAhBD;;EAkBA,MAAMS,qBAAqB,GAAIP,KAAD,IAAW;IACvCJ,kBAAkB,CAACI,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAAlB;EACD,CAFD;;EAIA,MAAMC,gBAAgB,GAAIV,KAAD,IAAW;IAClCF,aAAa,CAACE,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAAb;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE,QAAC,UAAD;MAAY,KAAK,EAAC,mBAAlB;MAAsC,OAAO,EAAC;IAA9C;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MAAM,SAAS,EAAElB,OAAO,CAACoB,KAAzB;MAAA,uBACE;QAAM,QAAQ,EAAEZ,cAAhB;QAAA,wBAME;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANF,eAOE;UACE,EAAE,EAAC,UADL;UAEE,IAAI,EAAC,MAFP;UAGE,KAAK,EAAEJ,eAHT;UAIE,QAAQ,EAAEY;QAJZ;UAAA;UAAA;UAAA;QAAA,QAPF,eAaE;UAAO,OAAO,EAAC,KAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAbF,eAcE;UACE,EAAE,EAAC,KADL;UAEE,IAAI,EAAC,QAFP;UAGE,KAAK,EAAEV,UAHT;UAIE,QAAQ,EAAEa;QAJZ;UAAA;UAAA;UAAA;QAAA,QAdF,eAoBE,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QApBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CA5DD;;GAAMjB,O;;KAAAA,O;AA8DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}