{"ast":null,"code":"var _jsxFileName = \"/Users/jotaehyeon/Desktop/TIL-React/10-Handling Side Effects Using Reducers & Using the Context API/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader'; //? Side Effects\n//? HTTP Request나 LocalStorage 등 리엑트 이외의 모든 일을 가리키는 말이다.\n//? HTTP Request를 단순히 State와 사용한다면 무한 반복 루프가 생긴다.\n//? 왜냐하면 컴포넌트 function이 다시 랜더링될때 request를 보내면서 state를 변경하게 된다.\n//? state를 변경하니 다시 컴포넌트 function이 실행되어 다시 request를 요청하고..........\n//* 이런것들을 관리하기 위해 나온 것이 바로 useEffect 훅이다!!!!.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // localStorage\n    // 첫번째 argument : Key(identifier) (항상 String으로 사용)\n    // 두번째 argument : Value(store) (항상 String으로 사용, 숫자가 아닌 다른걸로 사용해도 됨.. 다만 로그인이 되었는지 안되었는지 구분이 되어야함)\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Home","MainHeader","App","isLoggedIn","setIsLoggedIn","loginHandler","email","password","localStorage","setItem","logoutHandler"],"sources":["/Users/jotaehyeon/Desktop/TIL-React/10-Handling Side Effects Using Reducers & Using the Context API/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\n\n//? Side Effects\n//? HTTP Request나 LocalStorage 등 리엑트 이외의 모든 일을 가리키는 말이다.\n//? HTTP Request를 단순히 State와 사용한다면 무한 반복 루프가 생긴다.\n//? 왜냐하면 컴포넌트 function이 다시 랜더링될때 request를 보내면서 state를 변경하게 된다.\n//? state를 변경하니 다시 컴포넌트 function이 실행되어 다시 request를 요청하고..........\n//* 이런것들을 관리하기 위해 나온 것이 바로 useEffect 훅이다!!!!.\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // localStorage\n    // 첫번째 argument : Key(identifier) (항상 String으로 사용)\n    // 두번째 argument : Value(store) (항상 String으로 사용, 숫자가 아닌 다른걸로 사용해도 됨.. 다만 로그인이 되었는지 안되었는지 구분이 되어야함)\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMO,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;IACxC;IACA;IACA;IACAC,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,GAAnC;IACAL,aAAa,CAAC,IAAD,CAAb;EACD,CAND;;EAQA,MAAMM,aAAa,GAAG,MAAM;IAC1BN,aAAa,CAAC,KAAD,CAAb;EACD,CAFD;;EAIA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE,QAAC,UAAD;MAAY,eAAe,EAAED,UAA7B;MAAyC,QAAQ,EAAEO;IAAnD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,WACG,CAACP,UAAD,iBAAe,QAAC,KAAD;QAAO,OAAO,EAAEE;MAAhB;QAAA;QAAA;QAAA;MAAA,QADlB,EAEGF,UAAU,iBAAI,QAAC,IAAD;QAAM,QAAQ,EAAEO;MAAhB;QAAA;QAAA;QAAA;MAAA,QAFjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAxBQR,G;;KAAAA,G;AA0BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}